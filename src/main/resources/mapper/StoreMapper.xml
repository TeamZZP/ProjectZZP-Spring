<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="StoreMapper">
  
  <!-- 전체 카테고리 select-->
  <select id="category" resultType="CategoryDTO">
  select * from category
  </select>
  
  <!-- 베스트상품들 (스토어 메인용)-->
  <select id="bestProduct" resultType="ProductByCategoryDTO">
   select * 
   from ( select p.P_ID ,
   (select IMAGE_ROUTE from images where p_id = p.p_id and IMAGE_RNK = 1) as p_image ,
   (select count(*) from Orders where p_id = p.p_id ) as p_order ,
   p.P_NAME ,
   p.P_CONTENT ,
   p.C_ID ,
   p.P_COST_PRICE ,
   p.P_SELLING_PRICE ,
   p.P_DISCOUNT ,
   p.P_CREATED ,
   p.P_STOCK 
   from product p ) 
   order by p_order desc 
  </select>
  
  <!-- 카테고리별 상품 -->
  <select id="productByCategory" parameterType="int" resultType="ProductByCategoryDTO">
   select p.P_ID ,
   (select IMAGE_ROUTE from images where p_id = p.p_id and IMAGE_RNK = 1) as p_image ,
   p.P_NAME ,
   p.P_CONTENT ,
   p.C_ID ,
   p.P_COST_PRICE ,
   p.P_SELLING_PRICE ,
   p.P_DISCOUNT ,
   p.P_CREATED ,
   p.P_STOCK 
   from product p 
   where p.c_id = #{c_id} 
  </select>
  
  <!-- 제품상세 -->
  <select id="productRetrieve" parameterType="int" resultType="ProductByCategoryDTO">
   select p.P_ID ,
   (select IMAGE_ROUTE from images where p_id = p.p_id and IMAGE_RNK = 1) as p_image ,
   p.P_NAME ,
   p.P_CONTENT ,
   p.C_ID ,
   p.P_COST_PRICE ,
   p.P_SELLING_PRICE ,
   p.P_DISCOUNT ,
   p.P_CREATED ,
   p.P_STOCK 
   from product p 
  where p.p_id = #{p_id}
  </select>
  
  <!-- 상품페이지에서 찜 전체 검사 -->
  <select id="zzimAllCheck" parameterType="String" resultType="int">
  select p_id from product_liked where userid = #{userid}
  </select>
  
  <!-- 찜했는지안했는지 검사 -->
  <select id="zzimCheck" parameterType="hashmap" resultType="int">
  select count(*) from product_liked where p_id = #{p_id} and userid = #{userid}
  </select>
  
  <!-- 찜추가 -->
  <insert id="addZzim" parameterType="hashmap">
   insert into product_liked values (#{userid},#{p_id})
  </insert>
  
  <!-- 찜삭제 -->
  <delete id="deleteZzim" parameterType="hashmap">
 delete from product_liked where p_id = #{p_id} and userid = #{userid} 
  </delete>
  
  </mapper>
  